name: Auto Tag

on:
  push:
    branches:
      - main  # 或者是您的默认分支名称，如master
    paths-ignore:
      - '**.md'  # 忽略对文档的修改
      - '.github/workflows/**'  # 忽略对工作流文件的修改

jobs:
  auto-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # 获取所有历史记录和标签
      
      - name: Get latest tag
        id: get_latest_tag
        run: |
          git fetch --tags
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Latest tag: $latest_tag"
          echo "LATEST_TAG=$latest_tag" >> $GITHUB_ENV
        shell: bash
      
      - name: Bump version and push tag
        id: bump_version
        run: |
          # 从最新标签中提取版本号
          latest_version=${LATEST_TAG#v}
          
          # 将版本号拆分为主要、次要和补丁版本
          IFS='.' read -r major minor patch <<< "$latest_version"
          
          # 增加补丁版本
          new_patch=$((patch + 1))
          new_version="v$major.$minor.$new_patch"
          
          echo "New version: $new_version"
          
          # 配置Git
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # 创建并推送新标签
          git tag -a "$new_version" -m "Release $new_version"
          git push origin "$new_version"
          
          echo "NEW_VERSION=$new_version" >> $GITHUB_ENV
        shell: bash
      
      - name: Output new version
        run: echo "Successfully created and pushed tag ${{ env.NEW_VERSION }}"