name: Auto Tag and Release

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - '.github/workflows/**'
    # tags:
    #   - '*'

permissions:
  contents: write

jobs:
  auto-tag-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Get latest tag
        id: get_latest_tag
        run: |
          git fetch --tags
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Latest tag: $latest_tag"
          echo "LATEST_TAG=$latest_tag" >> $GITHUB_ENV
        shell: bash
      
      - name: Bump version and push tag
        id: bump_version
        run: |
          latest_version=${LATEST_TAG#v}
          IFS='.' read -r major minor patch <<< "$latest_version"
          new_patch=$((patch + 1))
          
          # Check if previous version was a beta version
          if [[ "$latest_version" == *-beta* ]]; then
            beta_num=$(echo "$latest_version" | sed -E 's/.*-beta\.([0-9]+)/\1/')
            new_beta_num=$((beta_num + 1))
            new_version="v$major.$minor.$new_patch-beta.$new_beta_num"
          else
            new_version="v$major.$minor.$new_patch-beta.1"
          fi
          
          echo "New version: $new_version"
          
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a "$new_version" -m "Release $new_version"
          git push origin "$new_version"
          
          echo "NEW_VERSION=$new_version" >> $GITHUB_ENV
        shell: bash
      
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: stable
      
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      
      - name: Output new version
        run: echo "Successfully created and pushed tag ${{ env.NEW_VERSION }} and released with GoReleaser"