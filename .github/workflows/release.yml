name: Combined Release Workflow

on:
  # 触发条件1: 主分支推送（触发打标签）
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - '.github/workflows/**'
  
  # 触发条件2: 标签推送（触发构建）
  push:
    tags:
      - 'v*'

jobs:
  # 第一阶段：自动打标签
  auto-tag:
    # 只在主分支推送时执行
    if: github.event_name == 'push' && contains(github.ref, 'refs/heads/main')
    runs-on: ubuntu-latest
    outputs:
      new-tag: ${{ steps.bump_version.outputs.new_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}

      - name: Fetch all tags
        run: git fetch --tags -f

      - name: Generate new version
        id: bump_version
        run: |
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          latest_version=${latest_tag#v}
          IFS='.' read -r major minor patch <<< "$latest_version"
          new_version="v$major.$minor.$((patch + 1))"
          echo "new_version=$new_version" >> $GITHUB_OUTPUT

      - name: Create and push tag
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          # 创建并推送新标签
          git tag -a "$new_version" -m "Release $new_version"
          git push origin "$new_version"
          
          echo "NEW_VERSION=$new_version" >> $GITHUB_ENV

  # 第二阶段：构建发布
  goreleaser:
    # 只在标签推送时执行
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    needs: auto-tag  # 显式声明依赖关系
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Run Goreleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}  # 统一使用PAT